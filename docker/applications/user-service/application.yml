spring:
  application:
    name: user-service
  datasource:
    username: user
    password: password
    url: jdbc:mysql://polar-mysql:3306/polardb_user
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true  # SQL 쿼리 출력
    properties:
      hibernate:
        format_sql: true  # SQL 쿼리 포맷팅
  flyway:
    enabled: true
#      baseline-on-migrate: true
  rabbitmq:
    host: polar-rabbitmq
    port: 5672
    username: admin
    password: password

rabbitmq:
  queue:
    name: user-service
  exchange:
    name: polar-exchange
  routing:
    key: key

springdoc:
  package-to-scan: com.polar_moviechart.userservice.domain.controller
  default-consumes-media-type: application/json;charset-UTF-8
  default-produces-media-type: application/json;charset-UTF-8
  swagger-ui:
    path: /swagger
    disable-swagger-default-url: true
    display-request-duration: true
    operations-sorter: alpha

movie-service:
  url: http://movie-service/internal/api/v1/movies/

server:
  port: 8082

kakao:
  client:
    id: 3c46ac9fcd53813acad0147afe8d5a31

jwt:
  secetKey: polarMoviechartJwtSecretPolarMoviechartJwtSecret
  accessTokenValidityInMilliseconds: 3600000 # 1시간
  refreshTokenValidityInMilliseconds: 604800000 # 7일

management:
  endpoints:
    web:
      exposure:
        include: health, metrics, prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
  metrics:
    tags:
      application: ${spring.application.name}

otel:
  service:
    name: ${spring.application.name}